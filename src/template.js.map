{"version":3,"file":"template.js","sourceRoot":"","sources":["template.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2017/12/12/012.\n */\n\nimport * as path from 'upath2';\nimport { BPromise } from './lib/util';\nimport { IEpubConfig, IBuilder } from './var';\nimport { EpubMaker } from './index';\nimport JSZip = require('jszip');\n\nexport const defaultPath = path.join(__dirname, './epubtpl') as string;\n\nexport const defaultList = {\n\t'idpf-wasteland': path.join(defaultPath, './from_idpf_epub3'),\n\t'lightnovel': path.join(defaultPath, './lightnovel'),\n} as IList;\n\nexport interface IOptions\n{\n\tlist?: IList;\n}\n\nexport interface IList\n{\n\t'idpf-wasteland': string;\n\t'lightnovel': string;\n\n\t[index: string]: any;\n}\n\nexport class TemplateManagers\n{\n\tpublic basePath = defaultPath;\n\tpublic list = defaultList;\n\tpublic paths: string[] = [];\n\n\tconstructor(options: IOptions = {})\n\t{\n\t\tObject.assign(this.list, options.list);\n\t}\n\n\tvalue()\n\t{\n\t\treturn this.list;\n\t}\n\n\t/**\n\t *\n\t * @param {string} key\n\t * @param {any | string | IBuilder} value\n\t * @returns {this}\n\t */\n\tadd<T = any | string | IBuilder>(key: string, value: T)\n\t{\n\t\tthis.list[key] = value;\n\n\t\treturn this;\n\t}\n\n\thas<T = any | string | IBuilder>(name: string): T\n\t{\n\t\treturn (this.list[name]);\n\t}\n\n\t_get(t): BPromise<IBuilder>\n\t{\n\t\treturn BPromise.resolve().then(async function ()\n\t\t{\n\t\t\tlet fn = async function (b)\n\t\t\t{\n\t\t\t\tif (!b)\n\t\t\t\t{\n\t\t\t\t\t//\n\t\t\t\t}\n\t\t\t\telse if (b.init)\n\t\t\t\t{\n\t\t\t\t\treturn await b.init();\n\t\t\t\t}\n\t\t\t\telse if (b.builder)\n\t\t\t\t{\n\t\t\t\t\treturn b.builder;\n\t\t\t\t}\n\t\t\t\telse if (b.Builder && typeof b.Builder.make == 'function')\n\t\t\t\t{\n\t\t\t\t\treturn b.Builder;\n\t\t\t\t}\n\t\t\t\telse if (b.Builder)\n\t\t\t\t{\n\t\t\t\t\treturn await new b.Builder();\n\t\t\t\t}\n\t\t\t\telse if (typeof b == 'function')\n\t\t\t\t{\n\t\t\t\t\treturn await b();\n\t\t\t\t}\n\n\t\t\t\tthrow new ReferenceError(`tpl \"${name}\" not exists`);\n\t\t\t};\n\n\t\t\tlet r: IBuilder;\n\n\t\t\tif (!t)\n\t\t\t{\n\t\t\t\t//\n\t\t\t}\n\t\t\telse if (typeof t == 'string')\n\t\t\t{\n\t\t\t\tlet b = await import(t);\n\n\t\t\t\tr = await fn(b);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr = await fn(t);\n\t\t\t}\n\n\t\t\tif (r)\n\t\t\t{\n\t\t\t\treturn r;\n\t\t\t}\n\n\t\t\tthrow new ReferenceError(`tpl \"${name}\" not exists`);\n\t\t})\n\t}\n\n\tget(name: string)\n\t{\n\t\tconst self = this;\n\n\t\treturn BPromise.resolve().then(async function ()\n\t\t{\n\t\t\tif (self.has(name))\n\t\t\t{\n\t\t\t\treturn self._get(self.list[name]);\n\t\t\t}\n\n\t\t\treturn self._get(await self.search(name));\n\t\t});\n\t}\n\n\texec(name: string, epub: EpubMaker, options?)\n\t{\n\t\tconst self = this;\n\n\t\treturn BPromise.resolve().then(async function ()\n\t\t{\n\t\t\tlet builder = await self.get(name);\n\n\t\t\treturn builder.make(epub, options);\n\t\t});\n\t}\n\n\tsearch(name: string): string\n\t{\n\t\tlet self = this;\n\n\t\tconst fn = function (id)\n\t\t{\n\t\t\treturn BPromise.resolve(function ()\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn require.reverse(id);\n\t\t\t});\n\t\t};\n\n\t\t// @ts-ignore\n\t\treturn fn(name)\n\t\t\t.catch(function ()\n\t\t\t{\n\t\t\t\treturn fn(path.join(self.basePath, name));\n\t\t\t})\n\t\t\t.catch(function (err)\n\t\t\t{\n\t\t\t\tif (Array.isArray(self.paths))\n\t\t\t\t{\n\t\t\t\t\tlet ps = [];\n\n\t\t\t\t\tfor (let v of self.paths)\n\t\t\t\t\t{\n\t\t\t\t\t\tps.push(fn(path.join(v, name)));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn BPromise.any(ps);\n\t\t\t\t}\n\n\t\t\t\treturn BPromise.reject(err);\n\t\t\t})\n\t\t\t// @ts-ignore\n\t\t\t.then(function (ret)\n\t\t\t{\n\t\t\t\tif (!ret || typeof ret !== 'string')\n\t\t\t\t{\n\t\t\t\t\treturn BPromise.reject(`${ret} not a valid path`);\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t})\n\t\t\t.catch(function ()\n\t\t\t{\n\t\t\t\treturn fn(path.join('@epubtpl', name));\n\t\t\t})\n\t\t\t;\n\t}\n}\n\nexport const templateManagers = new TemplateManagers();\n\nexport default exports as typeof import('./template');\n"]}