{"version":3,"file":"zip.js","sourceRoot":"","sources":["zip.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2017/12/12/012.\n */\n\nimport JSZip = require('jszip');\nimport { IFiles, ICover, EpubConfig, IEpubConfig } from '../config';\nimport { compileTpl } from './handlebar-helpers';\nimport * as path from 'upath2';\nimport { EpubMaker } from '../index';\nimport { fetchFile } from './ajax';\nimport { hashSum, BPromise } from '../lib/util';\n\nexport { JSZip }\n\n/*\nexport async function addMimetype(zip: JSZip, epub: EpubMaker, options)\n{\n\treturn zip.file('mimetype', options.templates.mimetype);\n}\n\nexport function addContainerInfo(zip: JSZip, epub: EpubMaker, options)\n{\n\treturn zip.folder('META-INF').file('container.xml', compileTpl(options.templates.container, epub.epubConfig));\n}\n*/\n\nexport function parseFileSetting(coverUrl, epubConfig: IEpubConfig): IFiles\n{\n\tlet cover: ICover;\n\n\tif (typeof coverUrl == 'string')\n\t{\n\t\tlet r = /^(?:\\w+:)?\\/{2,3}.+/;\n\n\t\t//console.log(path.isAbsolute(coverUrl), coverUrl, r.exec(coverUrl));\n\n\t\tif (!path.isAbsolute(coverUrl) && r.exec(coverUrl))\n\t\t{\n\t\t\tcover = {\n\t\t\t\turl: coverUrl,\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet cwd = epubConfig.cwd || process.cwd();\n\n\t\t\tcover = {\n\t\t\t\tfile: path.isAbsolute(coverUrl) ? coverUrl : path.join(cwd, coverUrl),\n\t\t\t};\n\t\t}\n\n\t\t//console.log(cover);\n\t}\n\telse if (coverUrl && (coverUrl.url || coverUrl.file))\n\t{\n\t\tcover = coverUrl;\n\t}\n\n\treturn cover;\n}\n\nexport function addStaticFiles(zip, staticFiles: IFiles[])\n{\n\tlet cache = {} as {\n\t\t[k: string]: IFiles,\n\t};\n\n\treturn BPromise.mapSeries(staticFiles, async function (_file: IFiles)\n\t\t{\n\t\t\tlet file: IFiles;\n\n\t\t\tif (!_file.data\n\t\t\t\t&& _file.url\n\t\t\t\t&& cache[_file.url]\n\t\t\t\t&& cache[_file.url].data\n\t\t\t)\n\t\t\t{\n\t\t\t\tlet cf = cache[_file.url];\n\n\t\t\t\t_file.data = cf.data;\n\t\t\t\t_file.mime = _file.mime || cf.mime;\n\t\t\t}\n\n\t\t\tfile = await fetchFile(_file);\n\n\t\t\tif (_file.url)\n\t\t\t{\n\t\t\t\tcache[_file.url] = _file;\n\t\t\t}\n\n\t\t\tzip\n\t\t\t\t.folder(file.folder)\n\t\t\t\t.file(file.name, file.data)\n\t\t\t;\n\n\t\t\treturn file;\n\t\t})\n\t\t.tap(function ()\n\t\t{\n\t\t\tcache = null;\n\t\t})\n\t\t;\n}\n\nexport function addFiles(zip: JSZip, epub: EpubMaker, options)\n{\n\tlet staticFiles = epub.epubConfig.additionalFiles.reduce(function (a, file)\n\t{\n\t\ta.push(Object.assign({}, file, {\n\t\t\tfolder: file.folder ? path.join('EPUB', file.folder) : 'EPUB',\n\t\t}));\n\n\t\treturn a;\n\t}, []);\n\n\treturn addStaticFiles(zip, staticFiles)\n\t\t.then(function (staticFiles)\n\t\t{\n\n\t\t\tepub.epubConfig.additionalFiles.forEach((v, i) =>\n\t\t\t{\n\n\t\t\t\tlet s = staticFiles[i];\n\n\t\t\t\tv.mime = v.mime || s.mime;\n\t\t\t\tv.name = s.name;\n\n\t\t\t\tif (v.folder === null)\n\t\t\t\t{\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tv.href = v.name;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tv.href = [v.folder, v.name].join('/');\n\t\t\t\t}\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tv.id = v.id || 'additionalFiles-' + hashSum(v.name);\n\n\t\t\t});\n\n\t\t\t//console.log(epub.epubConfig.additionalFiles, staticFiles);\n\n\t\t\treturn staticFiles;\n\t\t})\n\t\t;\n}\n\nexport async function addCover(zip: JSZip, epub: EpubMaker, options)\n{\n\tif (epub.epubConfig.cover)\n\t{\n\t\tepub.epubConfig.cover.basename = 'CoverDesign';\n\t\tlet file = await fetchFile(epub.epubConfig.cover)\n\t\t\t.catch(e =>\n\t\t\t{\n\t\t\t\tconsole.error(e && e.meggage || `can't fetch cover`);\n\t\t\t\treturn null;\n\t\t\t})\n\t\t;\n\n\t\tif (!file)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t//file.name = `CoverDesign${file.ext}`;\n\n\t\tlet filename = file.name = file.folder ? path.join(file.folder, file.name) : file.name;\n\n\t\tzip\n\t\t\t.folder('EPUB')\n\t\t\t//.folder('images')\n\t\t\t.file(filename, file.data)\n\t\t;\n\n\t\treturn filename;\n\t}\n\n\treturn false;\n}\n\nexport interface IAddSubSectionsCallback\n{\n\t(zip: JSZip, section: EpubMaker.Section, epubConfig: EpubConfig, options?)\n}\n\nexport function addSubSections(zip: JSZip,\n\tsection: EpubMaker.Section,\n\tcb: IAddSubSectionsCallback,\n\tepub: EpubMaker,\n\toptions?,\n)\n{\n\treturn BPromise\n\t\t.resolve(cb(zip, section, epub.epubConfig, options))\n\t\t.then(function ()\n\t\t{\n\t\t\treturn BPromise.mapSeries(section.subSections, function (subSection: EpubMaker.Section)\n\t\t\t{\n\t\t\t\treturn addSubSections(zip, subSection, cb, epub, options);\n\t\t\t});\n\t\t})\n\t\t;\n}\n\nexport default exports as typeof import('./zip');\n"]}