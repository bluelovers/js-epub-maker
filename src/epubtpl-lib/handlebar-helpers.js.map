{"version":3,"file":"handlebar-helpers.js","sourceRoot":"","sources":["handlebar-helpers.ts"],"names":[],"mappings":";;AAAA,2CAAoC;AA2D3B,qBA3DF,oBAAU,CA2DE;AA1DnB,aAAa;AACb,+BAAgC;AAChC,aAAa;AACb,yBAAyB;AAEzB,wBAAiC;AAEpB,QAAA,SAAS,GAAG;IACxB,MAAM,EAAE,YAAY;IACpB,KAAK,EAAE,YAAY;IACnB,KAAK,EAAE,WAAW;IAClB,KAAK,EAAE,WAAW;IAClB,KAAK,EAAE,eAAe;IACtB,KAAK,EAAE,WAAW;IAClB,KAAK,EAAE,6BAA6B;IACpC,KAAK,EAAE,UAAU;CACjB,CAAC;AAEF,oBAAU,CAAC,cAAc,CAAC,WAAW,EAAE,UAAU,GAAG;IAEnD,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC;AAEH,oBAAU,CAAC,cAAc,CAAC,UAAU,EAAE,UAAU,GAAG;IAElD,OAAO,iBAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AAEH,oBAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,QAAQ,EAAE,OAAO;IAE9D,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAEpC,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;IAElD,aAAa;IACb,OAAO,IAAI,oBAAU,CAAC,UAAU,CAAC,oBAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC;AAEH,SAAS,GAAG,CAAC,GAAG;IAEf,IAAI,GAAG,KAAK,SAAS,EACrB;QACC,OAAO,GAAG,CAAC;KACX;IAED,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED,SAAgB,UAAU,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAwB;IAErE,OAAO,UAAU,CAAC,UAAU,CAAC,oBAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE;QAClE,aAAa;QACb,0BAA0B,EAAE,IAAI;QAChC,aAAa;QACb,6BAA6B,EAAE,IAAI;KACnC,CAAC,EAAE,cAAc,CAAC,CAAC;AACrB,CAAC;AARD,gCAQC;AAID,kBAAe,oBAAU,CAAC","sourcesContent":["import Handlebars from 'handlebars';\n// @ts-ignore\nimport path = require('upath2');\n// @ts-ignore\nimport * as fs from 'fs';\n\nimport epubTplLib, {  } from '.';\n\nexport const mimetypes = {\n\t'jpeg': 'image/jpeg',\n\t'jpg': 'image/jpeg',\n\t'bmp': 'image/bmp',\n\t'png': 'image/png',\n\t'svg': 'image/svg+xml',\n\t'gif': 'image/gif',\n\t'ttf': 'application/x-font-truetype',\n\t'css': 'text/css',\n};\n\nHandlebars.registerHelper('extension', function (str)\n{\n\treturn ext(str);\n});\n\nHandlebars.registerHelper('mimetype', function (str)\n{\n\treturn mimetypes[ext(str)];\n});\n\nHandlebars.registerHelper('import', function (filePath, options)\n{\n\tfilePath = path.normalize(filePath);\n\n\tlet source = fs.readFileSync(filePath).toString();\n\n\t// @ts-ignore\n\treturn new Handlebars.SafeString(Handlebars.compile(source)(Object.create(this)));\n});\n\nfunction ext(str)\n{\n\tif (str === undefined)\n\t{\n\t\treturn str;\n\t}\n\n\treturn str.substr(str.lastIndexOf('.') + 1);\n}\n\nexport function compileTpl(template, content, skipFormatting?: boolean): string\n{\n\treturn epubTplLib.formatHTML(Handlebars.compile(template)(content, {\n\t\t// @ts-ignore\n\t\tallowProtoMethodsByDefault: true,\n\t\t// @ts-ignore\n\t\tallowProtoPropertiesByDefault: true,\n\t}), skipFormatting);\n}\n\nexport { Handlebars };\n\nexport default Handlebars;\n"]}