{"version":3,"file":"uuid.js","sourceRoot":"","sources":["uuid.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH,kDAAmD;AAEnD,iCAA0C;AAG1C,SAAgB,UAAU,CAAC,KAAW;IAErC,IAAI,CAAC,KAAK,EACV;QACC,KAAK,GAAG,cAAO,EAAE,CAAC;KAClB;SACI,IAAK,KAAoB,CAAC,KAAK,EACpC;QACC,KAAK,GAAG,cAAO,CAAC;YACf,aAAa;YACb,KAAK,CAAC,KAAK;YACX,aAAa;YACb,KAAK,CAAC,MAAM;SACZ,CAAC,CAAC;KACH;SACI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAClC;QACC,KAAK,GAAG,cAAO,CAAC,KAAK,CAAC,CAAC;KACvB;IAED,OAAO,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACrD,CAAC;AArBD,gCAqBC;AAED,kBAAe,UAAU,CAAA","sourcesContent":["/**\n * Created by user on 2018/9/8/008.\n */\n\nimport getUuidByString = require('uuid-by-string');\nimport uuidv1 = require('uuid/v1');\nimport { hashSum, shortid } from './util';\nimport { EpubConfig } from '../config';\n\nexport function createUUID(input?: any): string\n{\n\tif (!input)\n\t{\n\t\tinput = shortid();\n\t}\n\telse if ((input as EpubConfig).title)\n\t{\n\t\tinput = hashSum([\n\t\t\t// @ts-ignore\n\t\t\tinput.title,\n\t\t\t// @ts-ignore\n\t\t\tinput.author,\n\t\t]);\n\t}\n\telse if (typeof input !== 'string')\n\t{\n\t\tinput = hashSum(input);\n\t}\n\n\treturn getUuidByString(String(input)).toLowerCase();\n}\n\nexport default createUUID\n"]}